

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Dec 27 14:35:20 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 1.44
    19                           ; Generated 14/09/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _TRISCbits	set	3988
    53  0000                     _TRISA	set	3986
    54  0000                     _IPR1bits	set	3999
    55  0000                     _CCP1CON	set	4029
    56  0000                     _ADCON2bits	set	4032
    57  0000                     _ADCON1bits	set	4033
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _PIR2bits	set	4001
    60  0000                     _ADRESL	set	4035
    61  0000                     _ADRESH	set	4036
    62  0000                     _PIR1bits	set	3998
    63  0000                     _T3CKPS0	set	32140
    64  0000                     _T3CKPS1	set	32141
    65  0000                     _T3CCP1	set	32139
    66  0000                     _T3CCP2	set	32142
    67  0000                     _ADIE	set	31982
    68  0000                     _ADIF	set	31990
    69  0000                     _GIE	set	32663
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  000104                     __pcinit:
    75                           	opt stack 0
    76  000104                     start_initialization:
    77                           	opt stack 0
    78  000104                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (2 bytes)
    82  000104  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
    83  000106  6A15               	clrf	__pbssCOMRAM& (0+255),c
    84  000108                     end_of_initialization:
    85                           	opt stack 0
    86  000108                     __end_of__initialization:
    87                           	opt stack 0
    88  000108  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    89  00010A  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    90  00010C  0100               	movlb	0
    91  00010E  EF89  F000         	goto	_main	;jump to C main() function
    92                           
    93                           	psect	bssCOMRAM
    94  000015                     __pbssCOMRAM:
    95                           	opt stack 0
    96  000015                     _adcValue:
    97                           	opt stack 0
    98  000015                     	ds	2
    99                           
   100                           	psect	cstackCOMRAM
   101  000001                     __pcstackCOMRAM:
   102                           	opt stack 0
   103  000001                     ??_Hi_ISR:
   104  000001                     
   105                           ; 1 bytes @ 0x0
   106  000001                     	ds	20
   107  000015                     
   108                           ; 1 bytes @ 0x14
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 23 in file "newmain.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;		None
   119 ;; Return value:  Size  Location     Type
   120 ;;                  1    wreg      void 
   121 ;; Registers used:
   122 ;;		wreg, status,2, cstack
   123 ;; Tracked objects:
   124 ;;		On entry : 0/0
   125 ;;		On exit  : 0/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   128 ;;      Params:         0       0       0       0       0       0       0
   129 ;;      Locals:         0       0       0       0       0       0       0
   130 ;;      Temps:          0       0       0       0       0       0       0
   131 ;;      Totals:         0       0       0       0       0       0       0
   132 ;;Total ram usage:        0 bytes
   133 ;; Hardware stack levels required when called:    2
   134 ;; This function calls:
   135 ;;		_adc_init
   136 ;;		_ccp2_init
   137 ;;		_tmr_init
   138 ;; This function is called by:
   139 ;;		Startup code after reset
   140 ;; This function uses a non-reentrant model
   141 ;;
   142                           
   143                           	psect	text0
   144  000112                     __ptext0:
   145                           	opt stack 0
   146  000112                     _main:
   147                           	opt stack 29
   148                           
   149                           ;newmain.c: 26: adc_init();
   150                           
   151                           ;incstack = 0
   152  000112  EC65  F000         	call	_adc_init	;wreg free
   153                           
   154                           ;newmain.c: 27: ccp2_init();
   155  000116  EC90  F000         	call	_ccp2_init	;wreg free
   156                           
   157                           ;newmain.c: 28: tmr_init();
   158  00011A  EC96  F000         	call	_tmr_init	;wreg free
   159  00011E                     l57:
   160  00011E  D7FF               	goto	l57
   161  000120                     __end_of_main:
   162                           	opt stack 0
   163                           
   164 ;; *************** function _tmr_init *****************
   165 ;; Defined at:
   166 ;;		line 90 in file "newmain.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		None
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   180 ;;      Params:         0       0       0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0
   183 ;;      Totals:         0       0       0       0       0       0       0
   184 ;;Total ram usage:        0 bytes
   185 ;; Hardware stack levels used:    1
   186 ;; Hardware stack levels required when called:    1
   187 ;; This function calls:
   188 ;;		Nothing
   189 ;; This function is called by:
   190 ;;		_main
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text1
   195  00012C                     __ptext1:
   196                           	opt stack 0
   197  00012C                     _tmr_init:
   198                           	opt stack 29
   199                           
   200                           ;newmain.c: 92: T3CCP2=0;
   201                           
   202                           ;incstack = 0
   203  00012C  9CB1               	bcf	4017,6,c	;volatile
   204                           
   205                           ;newmain.c: 93: T3CCP1=1;
   206  00012E  86B1               	bsf	4017,3,c	;volatile
   207                           
   208                           ;newmain.c: 95: T3CKPS1=1;
   209  000130  8AB1               	bsf	4017,5,c	;volatile
   210                           
   211                           ;newmain.c: 96: T3CKPS0=0;
   212  000132  98B1               	bcf	4017,4,c	;volatile
   213  000134  0012               	return		;funcret
   214  000136                     __end_of_tmr_init:
   215                           	opt stack 0
   216                           
   217 ;; *************** function _ccp2_init *****************
   218 ;; Defined at:
   219 ;;		line 70 in file "newmain.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2
   228 ;; Tracked objects:
   229 ;;		On entry : 0/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   233 ;;      Params:         0       0       0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0       0       0
   235 ;;      Temps:          0       0       0       0       0       0       0
   236 ;;      Totals:         0       0       0       0       0       0       0
   237 ;;Total ram usage:        0 bytes
   238 ;; Hardware stack levels used:    1
   239 ;; Hardware stack levels required when called:    1
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		_main
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	text2
   248  000120                     __ptext2:
   249                           	opt stack 0
   250  000120                     _ccp2_init:
   251                           	opt stack 29
   252                           
   253                           ;newmain.c: 72: TRISCbits.TRISC2=0;
   254                           
   255                           ;incstack = 0
   256  000120  9494               	bcf	3988,2,c	;volatile
   257                           
   258                           ;newmain.c: 73: CCP1CON=9;
   259  000122  0E09               	movlw	9
   260  000124  6EBD               	movwf	4029,c	;volatile
   261                           
   262                           ;newmain.c: 74: PIR1bits.CCP1IF=0;
   263  000126  949E               	bcf	3998,2,c	;volatile
   264                           
   265                           ;newmain.c: 75: IPR1bits.CCP1IP = 1;
   266  000128  849F               	bsf	3999,2,c	;volatile
   267  00012A  0012               	return		;funcret
   268  00012C                     __end_of_ccp2_init:
   269                           	opt stack 0
   270                           
   271 ;; *************** function _adc_init *****************
   272 ;; Defined at:
   273 ;;		line 33 in file "newmain.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   287 ;;      Params:         0       0       0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0
   289 ;;      Temps:          0       0       0       0       0       0       0
   290 ;;      Totals:         0       0       0       0       0       0       0
   291 ;;Total ram usage:        0 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; Hardware stack levels required when called:    1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           	psect	text3
   302  0000CA                     __ptext3:
   303                           	opt stack 0
   304  0000CA                     _adc_init:
   305                           	opt stack 29
   306                           
   307                           ;newmain.c: 36: ADCON1bits.PCFG = 11 ;
   308                           
   309                           ;incstack = 0
   310  0000CA  50C1               	movf	4033,w,c	;volatile
   311  0000CC  0BF0               	andlw	-16
   312  0000CE  090B               	iorlw	11
   313  0000D0  6EC1               	movwf	4033,c	;volatile
   314                           
   315                           ;newmain.c: 39: ADCON0bits.CHS = 0 ;
   316  0000D2  94C2               	bcf	4034,2,c	;volatile
   317  0000D4  96C2               	bcf	4034,3,c	;volatile
   318  0000D6  98C2               	bcf	4034,4,c	;volatile
   319  0000D8  9AC2               	bcf	4034,5,c	;volatile
   320                           
   321                           ;newmain.c: 41: TRISA = 0xFF ;
   322  0000DA  6892               	setf	3986,c	;volatile
   323                           
   324                           ;newmain.c: 44: ADCON1bits.VCFG1 = 0 ;
   325  0000DC  9AC1               	bcf	4033,5,c	;volatile
   326                           
   327                           ;newmain.c: 45: ADCON1bits.VCFG0 = 0 ;
   328  0000DE  98C1               	bcf	4033,4,c	;volatile
   329                           
   330                           ;newmain.c: 53: ADCON2bits.ACQT = 5;
   331  0000E0  50C0               	movf	4032,w,c	;volatile
   332  0000E2  0BC7               	andlw	-57
   333  0000E4  0928               	iorlw	40
   334  0000E6  6EC0               	movwf	4032,c	;volatile
   335                           
   336                           ;newmain.c: 54: ADCON2bits.ADCS =4;
   337  0000E8  50C0               	movf	4032,w,c	;volatile
   338  0000EA  0BF8               	andlw	-8
   339  0000EC  0904               	iorlw	4
   340  0000EE  6EC0               	movwf	4032,c	;volatile
   341                           
   342                           ;newmain.c: 55: ADCON0bits.ADON = 1;
   343  0000F0  80C2               	bsf	4034,0,c	;volatile
   344                           
   345                           ;newmain.c: 57: ADCON2bits.ADFM = 1 ;
   346  0000F2  8EC0               	bsf	4032,7,c	;volatile
   347                           
   348                           ;newmain.c: 60: ADIF=0;
   349  0000F4  9C9E               	bcf	3998,6,c	;volatile
   350                           
   351                           ;newmain.c: 61: ADIE=1;
   352  0000F6  8C9D               	bsf	3997,6,c	;volatile
   353                           
   354                           ;newmain.c: 62: GIE=1;
   355  0000F8  8EF2               	bsf	intcon,7,c	;volatile
   356                           
   357                           ;newmain.c: 64: ADRESH=0;
   358  0000FA  0E00               	movlw	0
   359  0000FC  6EC4               	movwf	4036,c	;volatile
   360                           
   361                           ;newmain.c: 65: ADRESL=0;
   362  0000FE  0E00               	movlw	0
   363  000100  6EC3               	movwf	4035,c	;volatile
   364  000102  0012               	return	
   365  000104                     __end_of_adc_init:
   366                           	opt stack 0
   367                           intcon	equ	0xFF2
   368                           
   369 ;; *************** function _Hi_ISR *****************
   370 ;; Defined at:
   371 ;;		line 9 in file "newmain.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   385 ;;      Params:         0       0       0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0       0       0
   387 ;;      Temps:         20       0       0       0       0       0       0
   388 ;;      Totals:        20       0       0       0       0       0       0
   389 ;;Total ram usage:       20 bytes
   390 ;; Hardware stack levels used:    1
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		Interrupt level 2
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	intcode
   399  000008                     __pintcode:
   400                           	opt stack 0
   401  000008                     _Hi_ISR:
   402                           	opt stack 29
   403                           
   404                           ;incstack = 0
   405  000008  8217               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   406  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   407                           intcon	equ	0xFF2
   408                           
   409                           	psect	intcode_body
   410  000012                     __pintcode_body:
   411                           	opt stack 29
   412  000012                     int_func:
   413                           	opt stack 29
   414  000012  0006               	pop		; remove dummy address from shadow register refresh
   415  000014  CFFA F003          	movff	pclath,??_Hi_ISR+2
   416  000018  CFFB F004          	movff	pclatu,??_Hi_ISR+3
   417  00001C  CFE9 F005          	movff	fsr0l,??_Hi_ISR+4
   418  000020  CFEA F006          	movff	fsr0h,??_Hi_ISR+5
   419  000024  CFE1 F007          	movff	fsr1l,??_Hi_ISR+6
   420  000028  CFE2 F008          	movff	fsr1h,??_Hi_ISR+7
   421  00002C  CFD9 F009          	movff	fsr2l,??_Hi_ISR+8
   422  000030  CFDA F00A          	movff	fsr2h,??_Hi_ISR+9
   423  000034  CFF3 F00B          	movff	prodl,??_Hi_ISR+10
   424  000038  CFF4 F00C          	movff	prodh,??_Hi_ISR+11
   425  00003C  CFF6 F00D          	movff	tblptrl,??_Hi_ISR+12
   426  000040  CFF7 F00E          	movff	tblptrh,??_Hi_ISR+13
   427  000044  CFF8 F00F          	movff	tblptru,??_Hi_ISR+14
   428  000048  CFF5 F010          	movff	tablat,??_Hi_ISR+15
   429  00004C  C017  F011         	movff	btemp,??_Hi_ISR+16
   430  000050  C018  F012         	movff	btemp+1,??_Hi_ISR+17
   431  000054  C019  F013         	movff	btemp+2,??_Hi_ISR+18
   432  000058  C01A  F014         	movff	btemp+3,??_Hi_ISR+19
   433                           
   434                           ;newmain.c: 12: if(PIR1bits.ADIF){
   435  00005C  AC9E               	btfss	3998,6,c	;volatile
   436  00005E  D00D               	goto	i2l49
   437                           
   438                           ;newmain.c: 13: adcValue=(ADRESH*256) | (ADRESL);
   439  000060  50C3               	movf	4035,w,c	;volatile
   440  000062  CFC4 F001          	movff	4036,??_Hi_ISR	;volatile
   441  000066  6A02               	clrf	(??_Hi_ISR+1)& (0+255),c
   442  000068  C001  F002         	movff	??_Hi_ISR,??_Hi_ISR+1
   443  00006C  6A01               	clrf	??_Hi_ISR,c
   444  00006E  1001               	iorwf	??_Hi_ISR,w,c
   445  000070  6E15               	movwf	_adcValue,c
   446  000072  5002               	movf	??_Hi_ISR+1,w,c
   447  000074  6E16               	movwf	_adcValue+1,c
   448                           
   449                           ;newmain.c: 14: ADIF=0;
   450  000076  9C9E               	bcf	3998,6,c	;volatile
   451                           
   452                           ;newmain.c: 15: }
   453  000078  D002               	goto	i2l51
   454  00007A                     i2l49:
   455                           
   456                           ;newmain.c: 16: else if(PIR2bits.CCP2IF){
   457  00007A  B0A1               	btfsc	4001,0,c	;volatile
   458                           
   459                           ;newmain.c: 17: ADCON0bits.GO = 1;
   460  00007C  82C2               	bsf	4034,1,c	;volatile
   461  00007E                     i2l51:
   462                           
   463                           ;newmain.c: 19: }
   464                           ;newmain.c: 20: return ;
   465  00007E  C014  F01A         	movff	??_Hi_ISR+19,btemp+3
   466  000082  C013  F019         	movff	??_Hi_ISR+18,btemp+2
   467  000086  C012  F018         	movff	??_Hi_ISR+17,btemp+1
   468  00008A  C011  F017         	movff	??_Hi_ISR+16,btemp
   469  00008E  C010  FFF5         	movff	??_Hi_ISR+15,tablat
   470  000092  C00F  FFF8         	movff	??_Hi_ISR+14,tblptru
   471  000096  C00E  FFF7         	movff	??_Hi_ISR+13,tblptrh
   472  00009A  C00D  FFF6         	movff	??_Hi_ISR+12,tblptrl
   473  00009E  C00C  FFF4         	movff	??_Hi_ISR+11,prodh
   474  0000A2  C00B  FFF3         	movff	??_Hi_ISR+10,prodl
   475  0000A6  C00A  FFDA         	movff	??_Hi_ISR+9,fsr2h
   476  0000AA  C009  FFD9         	movff	??_Hi_ISR+8,fsr2l
   477  0000AE  C008  FFE2         	movff	??_Hi_ISR+7,fsr1h
   478  0000B2  C007  FFE1         	movff	??_Hi_ISR+6,fsr1l
   479  0000B6  C006  FFEA         	movff	??_Hi_ISR+5,fsr0h
   480  0000BA  C005  FFE9         	movff	??_Hi_ISR+4,fsr0l
   481  0000BE  C004  FFFB         	movff	??_Hi_ISR+3,pclatu
   482  0000C2  C003  FFFA         	movff	??_Hi_ISR+2,pclath
   483  0000C6  9217               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   484  0000C8  0011               	retfie		f
   485  0000CA                     __end_of_Hi_ISR:
   486                           	opt stack 0
   487  0000                     pclatu	equ	0xFFB
   488                           pclath	equ	0xFFA
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           prodh	equ	0xFF4
   494                           prodl	equ	0xFF3
   495                           intcon	equ	0xFF2
   496                           fsr0h	equ	0xFEA
   497                           fsr0l	equ	0xFE9
   498                           fsr1h	equ	0xFE2
   499                           fsr1l	equ	0xFE1
   500                           fsr2h	equ	0xFDA
   501                           fsr2l	equ	0xFD9
   502                           pclatu	equ	0xFFB
   503                           pclath	equ	0xFFA
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           prodh	equ	0xFF4
   509                           prodl	equ	0xFF3
   510                           intcon	equ	0xFF2
   511                           fsr0h	equ	0xFEA
   512                           fsr0l	equ	0xFE9
   513                           fsr1h	equ	0xFE2
   514                           fsr1l	equ	0xFE1
   515                           fsr2h	equ	0xFDA
   516                           fsr2l	equ	0xFD9
   517                           
   518                           	psect	rparam
   519  0000                     pclatu	equ	0xFFB
   520                           pclath	equ	0xFFA
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           prodh	equ	0xFF4
   526                           prodl	equ	0xFF3
   527                           intcon	equ	0xFF2
   528                           fsr0h	equ	0xFEA
   529                           fsr0l	equ	0xFE9
   530                           fsr1h	equ	0xFE2
   531                           fsr1l	equ	0xFE1
   532                           fsr2h	equ	0xFDA
   533                           fsr2l	equ	0xFD9
   534                           
   535                           	psect	temp
   536  000017                     btemp:
   537                           	opt stack 0
   538  000017                     	ds	1
   539  0000                     int$flags	set	btemp
   540  0000                     wtemp6	set	btemp+1
   541                           pclatu	equ	0xFFB
   542                           pclath	equ	0xFFA
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           prodh	equ	0xFF4
   548                           prodl	equ	0xFF3
   549                           intcon	equ	0xFF2
   550                           fsr0h	equ	0xFEA
   551                           fsr0l	equ	0xFE9
   552                           fsr1h	equ	0xFE2
   553                           fsr1l	equ	0xFE1
   554                           fsr2h	equ	0xFDA
   555                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20      22
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _adc_init
                          _ccp2_init
                           _tmr_init
 ---------------------------------------------------------------------------------
 (1) _tmr_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ccp2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Hi_ISR                                              20    20      0       0
                                              0 COMRAM    20    20      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _ccp2_init
   _tmr_init

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     14      16       1       17.5%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      14        0.0%
DATA                 0      0      16      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Dec 27 14:35:20 2018

                     l57 011E                      _GIE 007F97             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _ADIE 007CEE                     _ADIF 007CF6  
                   i2l51 007E                     i2l49 007A                     _main 0112  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0017                     prodh 000FF4                     prodl 000FF3  
                   start 000E             ___param_bank 000000                    ?_main 0001  
                  _TRISA 000F92                    pclath 000FFA                    tablat 000FF5  
                  wtemp6 0018          __initialization 0104             __end_of_main 0120  
                 ??_main 0015            __activetblptr 000000                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _T3CCP1 007D8B                   _T3CCP2 007D8E  
       __end_of_adc_init 0104                   _Hi_ISR 0008                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_tmr_init 0136  
     __size_of_ccp2_init 000C               __accesstop 0080  __end_of__initialization 0108  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  ?_Hi_ISR 0001  
                _CCP1CON 000FBD        __end_of_ccp2_init 012C                ?_adc_init 0001  
                _T3CKPS0 007D8C                  _T3CKPS1 007D8D          __size_of_Hi_ISR 00C2  
                __Hparam 0000                  __Lparam 0000                ?_tmr_init 0001  
                __pcinit 0104                  __ramtop 0600               ??_adc_init 0015  
                __ptext0 0112                  __ptext1 012C                  __ptext2 0120  
                __ptext3 00CA           __pintcode_body 0012     end_of_initialization 0108  
                int_func 0012               ??_tmr_init 0015                _TRISCbits 000F94  
         __end_of_Hi_ISR 00CA      start_initialization 0104         __CFG_OSC$INTIO67 000000  
               ??_Hi_ISR 0001        __size_of_adc_init 003A              __pbssCOMRAM 0015  
              _ccp2_init 0120                __pintcode 0008        __size_of_tmr_init 000A  
             ?_ccp2_init 0001                 _IPR1bits 000F9F                 _PIR1bits 000F9E  
               _PIR2bits 000FA1               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0                 __Hrparam 0000                 __Lrparam 0000  
               _adcValue 0015                 _adc_init 00CA              ??_ccp2_init 0015  
          __size_of_main 000E                 int$flags 0017                 _tmr_init 012C  
               intlevel2 0000  
