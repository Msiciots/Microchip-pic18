

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Dec 06 17:39:22 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 1.44
    15                           ; Generated 14/09/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4520 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TRISD	set	3989
    49  0000                     _TRISC	set	3988
    50  0000                     _RD0	set	31768
    51  0000                     _OSCCONbits	set	4051
    52  0000                     _T2CONbits	set	4042
    53  0000                     _CCPR1L	set	4030
    54  0000                     _PR2	set	4043
    55  0000                     _CCP1M0	set	32232
    56  0000                     _CCP1M1	set	32233
    57  0000                     _CCP1M2	set	32234
    58  0000                     _CCP1M3	set	32235
    59  0000                     _CCP1Y	set	32236
    60  0000                     _CCP1X	set	32237
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  007C3E                     __pcinit:
    66                           	opt stack 0
    67  007C3E                     start_initialization:
    68                           	opt stack 0
    69  007C3E                     __initialization:
    70                           	opt stack 0
    71  007C3E                     end_of_initialization:
    72                           	opt stack 0
    73  007C3E                     __end_of__initialization:
    74                           	opt stack 0
    75  007C3E  0100               	movlb	0
    76  007C40  EF48  F03E         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	opt stack 0
    81  000001                     PWM1_Duty@duty:
    82                           	opt stack 0
    83  000001                     PWM1_Init@setDuty:
    84                           	opt stack 0
    85                           
    86                           ; 4 bytes @ 0x0
    87  000001                     	ds	2
    88  000003                     ??_PWM1_Duty:
    89                           
    90                           ; 1 bytes @ 0x2
    91  000003                     	ds	2
    92  000005                     ??_main:
    93                           
    94                           ; 1 bytes @ 0x4
    95  000005                     	ds	1
    96  000006                     main@i:
    97                           	opt stack 0
    98                           
    99                           ; 2 bytes @ 0x5
   100  000006                     	ds	2
   101                           
   102 ;;
   103 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   104 ;;
   105 ;; *************** function _main *****************
   106 ;; Defined at:
   107 ;;		line 55 in file "newmain.c"
   108 ;; Parameters:    Size  Location     Type
   109 ;;		None
   110 ;; Auto vars:     Size  Location     Type
   111 ;;  i               2    5[COMRAM] int 
   112 ;; Return value:  Size  Location     Type
   113 ;;                  1    wreg      void 
   114 ;; Registers used:
   115 ;;		wreg, status,2, status,0, cstack
   116 ;; Tracked objects:
   117 ;;		On entry : 0/0
   118 ;;		On exit  : 0/0
   119 ;;		Unchanged: 0/0
   120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   121 ;;      Params:         0       0       0       0       0       0       0
   122 ;;      Locals:         2       0       0       0       0       0       0
   123 ;;      Temps:          1       0       0       0       0       0       0
   124 ;;      Totals:         3       0       0       0       0       0       0
   125 ;;Total ram usage:        3 bytes
   126 ;; Hardware stack levels required when called:    1
   127 ;; This function calls:
   128 ;;		_PWM1_Duty
   129 ;;		_PWM1_Init
   130 ;;		_PWM1_Start
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137  007C90                     __ptext0:
   138                           	opt stack 0
   139  007C90                     _main:
   140                           	opt stack 30
   141                           
   142                           ;newmain.c: 57: int i=15;
   143                           
   144                           ;incstack = 0
   145  007C90  0E00               	movlw	0
   146  007C92  6E07               	movwf	main@i+1,c
   147  007C94  0E0F               	movlw	15
   148  007C96  6E06               	movwf	main@i,c
   149                           
   150                           ;newmain.c: 59: TRISD=0XFF;
   151  007C98  6895               	setf	3989,c	;volatile
   152                           
   153                           ;newmain.c: 63: OSCCONbits.IRCF2=0;
   154  007C9A  9CD3               	bcf	4051,6,c	;volatile
   155                           
   156                           ;newmain.c: 64: OSCCONbits.IRCF1=1;
   157  007C9C  8AD3               	bsf	4051,5,c	;volatile
   158                           
   159                           ;newmain.c: 65: OSCCONbits.IRCF0=1;
   160  007C9E  88D3               	bsf	4051,4,c	;volatile
   161                           
   162                           ;newmain.c: 66: PWM1_Init(155);
   163  007CA0  0E9B               	movlw	155
   164  007CA2  6E01               	movwf	PWM1_Init@setDuty,c
   165  007CA4  0E00               	movlw	0
   166  007CA6  6E02               	movwf	PWM1_Init@setDuty+1,c
   167  007CA8  0E00               	movlw	0
   168  007CAA  6E03               	movwf	PWM1_Init@setDuty+2,c
   169  007CAC  0E00               	movlw	0
   170  007CAE  6E04               	movwf	PWM1_Init@setDuty+3,c
   171  007CB0  EC1C  F03E         	call	_PWM1_Init	;wreg free
   172                           
   173                           ;newmain.c: 67: PWM1_Duty(0);
   174  007CB4  0E00               	movlw	0
   175  007CB6  6E02               	movwf	PWM1_Duty@duty+1,c
   176  007CB8  0E00               	movlw	0
   177  007CBA  6E01               	movwf	PWM1_Duty@duty,c
   178  007CBC  EC2B  F03E         	call	_PWM1_Duty	;wreg free
   179  007CC0                     
   180                           ;newmain.c: 71: {
   181                           ;newmain.c: 73: if(RD0 == 0 && i<75)
   182  007CC0  B083               	btfsc	3971,0,c	;volatile
   183  007CC2  D00E               	goto	l48
   184  007CC4  BE07               	btfsc	main@i+1,7,c
   185  007CC6  D006               	goto	u120
   186  007CC8  5007               	movf	main@i+1,w,c
   187  007CCA  E10A               	bnz	l738
   188  007CCC  0E4B               	movlw	75
   189  007CCE  5C06               	subwf	main@i,w,c
   190  007CD0  B0D8               	btfsc	status,0,c
   191  007CD2  D006               	goto	l48
   192  007CD4                     u120:
   193                           
   194                           ;newmain.c: 74: i=i+1;
   195  007CD4  0E01               	movlw	1
   196  007CD6  2406               	addwf	main@i,w,c
   197  007CD8  6E06               	movwf	main@i,c
   198  007CDA  0E00               	movlw	0
   199  007CDC  2007               	addwfc	main@i+1,w,c
   200  007CDE  6E07               	movwf	main@i+1,c
   201  007CE0                     l48:
   202  007CE0                     l738:
   203                           
   204                           ;newmain.c: 75: PWM1_Duty(i);
   205  007CE0  C006  F001         	movff	main@i,PWM1_Duty@duty
   206  007CE4  C007  F002         	movff	main@i+1,PWM1_Duty@duty+1
   207  007CE8  EC2B  F03E         	call	_PWM1_Duty	;wreg free
   208                           
   209                           ;newmain.c: 76: PWM1_Start();
   210  007CEC  EC22  F03E         	call	_PWM1_Start	;wreg free
   211                           
   212                           ;newmain.c: 77: _delay((unsigned long)((50)*(800000/4000.0)));
   213  007CF0  0E0D               	movlw	13
   214  007CF2  6E05               	movwf	??_main& (0+255),c
   215  007CF4  0EFC               	movlw	252
   216  007CF6                     u137:
   217  007CF6  2EE8               	decfsz	wreg,f,c
   218  007CF8  D7FE               	bra	u137
   219  007CFA  2E05               	decfsz	??_main& (0+255),f,c
   220  007CFC  D7FC               	bra	u137
   221                           
   222                           ;newmain.c: 78: }while(1);
   223  007CFE  D7E0               	goto	l47
   224  007D00                     __end_of_main:
   225                           	opt stack 0
   226                           wreg	equ	0xFE8
   227                           status	equ	0xFD8
   228                           
   229 ;; *************** function _PWM1_Start *****************
   230 ;; Defined at:
   231 ;;		line 27 in file "newmain.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  2   36[None  ] int 
   238 ;; Registers used:
   239 ;;		wreg, status,2
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   245 ;;      Params:         0       0       0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0       0       0
   247 ;;      Temps:          0       0       0       0       0       0       0
   248 ;;      Totals:         0       0       0       0       0       0       0
   249 ;;Total ram usage:        0 bytes
   250 ;; Hardware stack levels used:    1
   251 ;; This function calls:
   252 ;;		Nothing
   253 ;; This function is called by:
   254 ;;		_main
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           	psect	text1
   259  007C44                     __ptext1:
   260                           	opt stack 0
   261  007C44                     _PWM1_Start:
   262                           	opt stack 30
   263                           
   264                           ;newmain.c: 32: CCP1M3=1;
   265                           
   266                           ;incstack = 0
   267  007C44  86BD               	bsf	4029,3,c	;volatile
   268                           
   269                           ;newmain.c: 33: CCP1M2=1;
   270  007C46  84BD               	bsf	4029,2,c	;volatile
   271                           
   272                           ;newmain.c: 34: CCP1M1=0;
   273  007C48  92BD               	bcf	4029,1,c	;volatile
   274                           
   275                           ;newmain.c: 35: CCP1M0=0;
   276  007C4A  90BD               	bcf	4029,0,c	;volatile
   277                           
   278                           ;newmain.c: 37: T2CONbits.TMR2ON=1;
   279  007C4C  84CA               	bsf	4042,2,c	;volatile
   280                           
   281                           ;newmain.c: 39: TRISC=0x00;
   282  007C4E  0E00               	movlw	0
   283  007C50  6E94               	movwf	3988,c	;volatile
   284                           
   285                           ;newmain.c: 49: {
   286                           ;newmain.c: 50: T2CONbits.T2CKPS1=1;
   287                           
   288                           ;newmain.c: 48: else if (16 == 16)
   289                           
   290                           ;newmain.c: 45: {
   291                           ;newmain.c: 47: }
   292                           
   293                           ;newmain.c: 44: else if(16 == 4)
   294                           
   295                           ;newmain.c: 41: {
   296                           ;newmain.c: 43: }
   297                           
   298                           ;newmain.c: 40: if (16 == 1)
   299  007C52  82CA               	bsf	4042,1,c	;volatile
   300  007C54  0012               	return	
   301  007C56                     __end_of_PWM1_Start:
   302                           	opt stack 0
   303                           wreg	equ	0xFE8
   304                           status	equ	0xFD8
   305                           
   306 ;; *************** function _PWM1_Init *****************
   307 ;; Defined at:
   308 ;;		line 14 in file "newmain.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;  setDuty         4    0[COMRAM] long 
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  2    0[COMRAM] int 
   315 ;; Registers used:
   316 ;;		None
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   322 ;;      Params:         4       0       0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0
   325 ;;      Totals:         4       0       0       0       0       0       0
   326 ;;Total ram usage:        4 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; This function calls:
   329 ;;		Nothing
   330 ;; This function is called by:
   331 ;;		_main
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text2
   336  007C38                     __ptext2:
   337                           	opt stack 0
   338  007C38                     _PWM1_Init:
   339                           	opt stack 30
   340                           
   341                           ;newmain.c: 16: PR2 = setDuty;
   342                           
   343                           ;incstack = 0
   344  007C38  C001  FFCB         	movff	PWM1_Init@setDuty,4043	;volatile
   345  007C3C  0012               	return		;funcret
   346  007C3E                     __end_of_PWM1_Init:
   347                           	opt stack 0
   348                           wreg	equ	0xFE8
   349                           status	equ	0xFD8
   350                           
   351 ;; *************** function _PWM1_Duty *****************
   352 ;; Defined at:
   353 ;;		line 19 in file "newmain.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;  duty            2    0[COMRAM] unsigned int 
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  2    0[COMRAM] int 
   360 ;; Registers used:
   361 ;;		wreg, status,2, status,0
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   367 ;;      Params:         2       0       0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0       0       0
   369 ;;      Temps:          2       0       0       0       0       0       0
   370 ;;      Totals:         4       0       0       0       0       0       0
   371 ;;Total ram usage:        4 bytes
   372 ;; Hardware stack levels used:    1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text3
   381  007C56                     __ptext3:
   382                           	opt stack 0
   383  007C56                     _PWM1_Duty:
   384                           	opt stack 30
   385                           
   386                           ;newmain.c: 22: CCPR1L=duty/4;
   387                           
   388                           ;incstack = 0
   389  007C56  C001  F003         	movff	PWM1_Duty@duty,??_PWM1_Duty
   390  007C5A  C002  F004         	movff	PWM1_Duty@duty+1,??_PWM1_Duty+1
   391  007C5E  90D8               	bcf	status,0,c
   392  007C60  3204               	rrcf	??_PWM1_Duty+1,f,c
   393  007C62  3203               	rrcf	??_PWM1_Duty,f,c
   394  007C64  90D8               	bcf	status,0,c
   395  007C66  3204               	rrcf	??_PWM1_Duty+1,f,c
   396  007C68  3203               	rrcf	??_PWM1_Duty,f,c
   397  007C6A  5003               	movf	??_PWM1_Duty,w,c
   398  007C6C  6EBE               	movwf	4030,c	;volatile
   399                           
   400                           ;newmain.c: 23: CCP1X=(duty/2)%2;
   401  007C6E  90D8               	bcf	status,0,c
   402  007C70  3002               	rrcf	PWM1_Duty@duty+1,w,c
   403  007C72  6E04               	movwf	(??_PWM1_Duty+1)& (0+255),c
   404  007C74  3001               	rrcf	PWM1_Duty@duty,w,c
   405  007C76  6E03               	movwf	??_PWM1_Duty& (0+255),c
   406  007C78  3003               	rrcf	??_PWM1_Duty,w,c
   407  007C7A  A0D8               	btfss	status,0,c
   408  007C7C  D002               	goto	u70
   409  007C7E  8ABD               	bsf	4029,5,c	;volatile
   410  007C80  D001               	goto	u85
   411  007C82                     u70:
   412  007C82  9ABD               	bcf	4029,5,c	;volatile
   413  007C84                     u85:
   414                           
   415                           ;newmain.c: 24: CCP1Y=duty%2;
   416  007C84  A001               	btfss	PWM1_Duty@duty,0,c
   417  007C86  D002               	goto	u90
   418  007C88  88BD               	bsf	4029,4,c	;volatile
   419  007C8A  0012               	return	
   420  007C8C                     u90:
   421  007C8C  98BD               	bcf	4029,4,c	;volatile
   422  007C8E  0012               	return		;funcret
   423  007C90                     __end_of_PWM1_Duty:
   424                           	opt stack 0
   425  0000                     wreg	equ	0xFE8
   426                           status	equ	0xFD8
   427                           wreg	equ	0xFE8
   428                           status	equ	0xFD8
   429                           
   430                           	psect	rparam
   431  0000                     wreg	equ	0xFE8
   432                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      7       7
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PWM1_Duty
    _main->_PWM1_Init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     384
                                              4 COMRAM     3     3      0
                          _PWM1_Duty
                          _PWM1_Init
                         _PWM1_Start
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            4     0      4      98
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _PWM1_Duty                                            4     2      2     218
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Duty
   _PWM1_Init
   _PWM1_Start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      7       7       1        5.5%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BANK5               EF      0       0      13        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            EF      0       0      15        0.0%
BIGRAM             5EE      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Dec 06 17:39:22 2018

                     l47 7CC0                       l48 7CE0                       u70 7C82  
                     u90 7C8C                       u85 7C84                      l738 7CE0  
                    _RD0 007C18                      u120 7CD4                      u137 7CF6  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _main 7C90  
          __CFG_BOREN$ON 000000                     start 0002             ___param_bank 000000  
                  ?_main 0001                    _CCP1X 007DED                    _CCP1Y 007DEC  
                  _TRISC 000F94                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
     __size_of_PWM1_Init 0006       __size_of_PWM1_Duty 003A              ?_PWM1_Start 0001  
                  main@i 0006                    status 000FD8          __initialization 7C3E  
           __end_of_main 7D00                   ??_main 0005            __activetblptr 000000  
                 _CCP1M0 007DE8                   _CCP1M1 007DE9                   _CCP1M2 007DEA  
                 _CCP1M3 007DEB                   _CCPR1L 000FBE        __end_of_PWM1_Init 7C3E  
      __end_of_PWM1_Duty 7C90      __size_of_PWM1_Start 0012               __accesstop 0080  
__end_of__initialization 7C3E            ___rparam_used 000001           __pcstackCOMRAM 0001  
           ??_PWM1_Start 0001                  __Hparam 0000                  __Lparam 0000  
     __end_of_PWM1_Start 7C56                  __pcinit 7C3E                  __ramtop 0600  
                __ptext0 7C90                  __ptext1 7C44                  __ptext2 7C38  
                __ptext3 7C56                _T2CONbits 000FCA     end_of_initialization 7C3E  
              _PWM1_Init 7C38                _PWM1_Duty 7C56               ?_PWM1_Init 0001  
             ?_PWM1_Duty 0001      start_initialization 7C3E         __CFG_OSC$INTIO67 000000  
            ??_PWM1_Init 0005              ??_PWM1_Duty 0003            PWM1_Duty@duty 0001  
               __Hrparam 0000         PWM1_Init@setDuty 0001                 __Lrparam 0000  
          __size_of_main 0070               _OSCCONbits 000FD3               _PWM1_Start 7C44  
